Things. to do:
Look into Scroll Control- Orbit Controls do not affect scrolling velocity. (Camera always moves in the direction of Lightblue cube to Lightsalmon cube)
Load in a large gltf scene and view how Orbit Controls will feel then.
    Maybe add in a texture background

onHover, highlight cubes
rotate all individual cubes on y axis
    conflict with useSpring in R3Spring and R3Cannon ...

Create and move the NavBar into the canvas
Try pushing Html with r3cannon api.impulse 0, 0, 2

Or create 3D Text and
Try pushing Html with r3cannon api.impulse 0, 0, 2

Test fetching data in the canvas
Create a footer
Perhaps Two 100vh pages, A scene Per Page

Camera. Movement Test 1
a React component (in Canvas, Html) is clicked on and the canvas camera moves to another position in the scene smoothly
useThree() hook to get the canvas' camera position and quaternion, store these initial values
Move the camera and lookAt the new object, store these destination position and quaternion values
Reset position and quaternion to initial values
.slerp to destination position and values in useFrame hook

Using Matrix transformations to move and rotate the camera (https://threejs.org/docs/#manual/en/introduction/Matrix-transformations)
save initial position and quaternion
move camera to target object (this will be the center of/inside the object) and add new THREE.Vector3(2, 3, 3) to position camera away from object
make camera lookAt target object
save destination position and quaternion
move camera back to initial position and quaternion
    object.matrix.setRotationFromQuaternion( start_quaternion );
    object.matrix.setPosition( start_position );
useFrame 
    lerp camera position to stored destination position
    slerp camera quaternion to stored destination quaternion

can also use react-spring to handle the transition between rotations or positions, but it seems to conflict with Cannon. Cannon also does not work with today's new release of Fiber :/

Test. 2
Create a css grid of 4 components
onClick
    Create a 3d object in that componentd 
    Center 3d object at center of component
    Use r3cannon api.impulse 0, 0, 2 (or another library?)

Page. Ideas Draft
Page 1 - slowly rotating bonfire from DS
Page 2
- Droika text CI/CD
- Made from grouped block "bricks", some of which can be pushed over
Page 3 - normal React page

One scroll should scroll whole page
Little dot marker showing how many pages
